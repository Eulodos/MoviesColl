plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
    id 'checkstyle'
    id "org.sonarqube" version "5.0.0.4638"
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
    implementation 'com.jayway.jsonpath:json-path:2.9.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "eulodos_MoviesColl_Backend"
        property "sonar.organization", "eulodos"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    jib {
        from {
            image 'azul/zulu-openjdk-alpine:17'
            credHelper = "pass"
        }
        to {
            image 'eulodos/movies-coll-backend'
            credHelper = "pass"
        }
    }
}
